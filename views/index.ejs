<!DOCTYPE html>
<html lang="en">
<head>

  <meta charset="utf-8">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <link href="/stylesheets/style.css" rel="stylesheet" type="text/css">
</head>
<body>
<!-- <% include partials/menu %> -->
<div class="container-fluid bg-3 text-center">    
  <h3>Restoring Division Calculator</h3><br>
  <h5>CSARCH2 - S11 Group 10</h5><br>
  <h5>Co, Sean Timothy</h5><br>
  <h5>Evangelista, Jason</h5><br>
  <h5>Reyes, Robin Jerome</h5><br>
  <form class="input-form" name="restoringDivisionForm" action="/restoringdivision/calculate" onsubmit="return validateForm()" method="post">
    <input type="number" class="form-control" name="dividend" placeholder="Dividend (in binary)">
    <br>
    <input type="number" class="form-control" name="divisor" placeholder="Divisor (in binary)">
    <br>
    <label class="form-label">Display Option: </label>
    <select class="form-control" name="viewOption" id="option">
      <option value="all-steps">All Steps</option>
      <option value="step-by-step">Step-by-step</option>
    </select>
    <br>
    <!-- <input type="checkbox" name="textFileOutput"> <label> Output result in text file</label> -->
    <br>
    <input class="btn btn-primary" type="submit" value="Calculate">
  </form>


<% if (steps) { %>
  <button type="button" class="btn btn-secondary download-file" onClick="downloadFile('<%=fileContent%>')">Download Steps and Final Output (text file)</button>
  <div>
    <% if(viewOption == "all-steps"){ %>

      
        <table class="table">
          <thead>
            <tr>
              <th scope="col">Step #</th>
              <th scope="col">A (after subtract & shift)</th>
              <th scope="col">Q (initial)</th>
              <th scope="col">A (after pass)</th>
              <th scope="col">Q (after pass)</th>
            </tr>
          </thead>
          <tbody>
            <% steps.forEach((step, index) => { %>
            <tr>
              <!-- <th scope="row">3</th> -->
              <td><%= (index + 1) %></td>
              <td><%= step.beforeA %></td>
              <td><%= step.beforeQ %></td>
              <td><%= step.afterA %></td>
              <td><%= step.afterQ %></td>
            </tr>
            <% }) %>
          </tbody>
        </table>
        <br>
      
    <% } %>

    <% if(viewOption == "step-by-step"){ %>
      <div id="result"></div>
      <!-- <input type="button" onclick="embedElements()" id="btnNextStep"> -->

      <button type="button" class="btn btn-success" onClick="embedElements('<%=steps.length%>')">Next Step</button>
        <table class="table">
          <thead>
            <tr>
              <th scope="col">Step #</th>
              <th scope="col">A (after subtract & restore)</th>
              <th scope="col">Q (initial)</th>
              <th scope="col">A (after pass)</th>
              <th scope="col">Q (after pass)</th>
            </tr>
          </thead>
          <tbody>
        <% steps.forEach((step, index) => { %>
          <% if ( index == 0) {%>
            <tr id="<%=index%>">
          <% } else {%>
            <!-- <tr id="<%=index%>" style="display: none;"> -->
            <tr id="<%=index%>" style="visibility: hidden;">

          <% } %>
              <!-- <tr id="<%=index%>"> -->
                <!-- <th scope="row">3</th> -->
                <td><%= (index + 1) %></td>
                <td><%= step.beforeA %></td>
                <td><%= step.beforeQ %></td>
                <td><%= step.afterA %></td>
                <td><%= step.afterQ %></td>
              </tr>
            <!-- </div> -->
            

          <!-- <% if ( index == 0) {%>
          <div id="<%=index%>">
          <% } else {%>
            <div id="<%=index%>" style="display: none;">
          <% } %>
            <tr>
                <td>Step <%= (index + 1) %>:</td>
                <br>
                <td>beforeA: <%= step.beforeA %></td>
                <td>beforeQ: <%= step.beforeQ %></td>
                <td>afterA: <%= step.afterA %></td>
                <td>afterQ: <%= step.afterQ %></td>
            </tr> -->
          </div>
          <br>
        <% }) %>
        </tbody>
      </table>
      
      <!-- <table class="table table-hovered" id="stepByStepTable">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Genre</th>
            </tr>
        </thead>
        <tbody>
           <tr>
             <td></td>
           </tr>
        </tbody>
    </table> -->

    <% } %>
  </div>

<% } %>
</div>

<script>
  var num = 1;

  function embedElements(length){
    var stepLength = parseInt(length)

    if(num < stepLength){
      var currentDiv = document.getElementById(String(num));
      // if(currentDiv.style.display == "none"){
      //   currentDiv.style.display = "inline";
      // }
      if(currentDiv.style.visibility == "hidden"){
        currentDiv.style.visibility = "visible";
      }
      num++;
    }
  }

  function downloadFile(content){
    console.log("content:")
    var newContent = content.replace(/N/g, '\n')
    console.log(newContent)
    var filename = "restoringdivision.txt";
    
    download(filename, newContent);
  }

  function download(filename, text) {
    var element = document.createElement('a');
    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
    element.setAttribute('download', filename);

    element.style.display = 'none';
    document.body.appendChild(element);

    element.click();

    document.body.removeChild(element);
  }

  function validateForm(){
    var dividend = document.forms["restoringDivisionForm"]["dividend"].value;
    var divisor = document.forms["restoringDivisionForm"]["divisor"].value;
    var invalidChars = ["2", "3", "4", "5", "6", "7", "8", "9", ".", "+", "-"];

    if(dividend.trim() == "" || divisor.trim() == ""){
      alert("inputs cannot be empty!");
      return false;
    }
    else if(invalidChars.some(el => dividend.toString().includes(el)) || invalidChars.some(el => divisor.toString().includes(el))){
      alert("inputs can only be in binary!");
      return false;
    }
    else if(dividend.toString().length > 16 || divisor.toString().length > 16){
      alert("inputs only take a maximum of 16 bits!");
      return false;
    }
  }


</script>

</body>
</html>